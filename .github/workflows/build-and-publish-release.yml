name: Build and publish Docker image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get PlantUML version
        uses: mavrosxristoforos/get-xml-info@1.0
        id: plantuml_version
        with:
          xml-file: 'pom.xml'
          xpath: '//dependency[artifactId = "plantuml"]/version'

      - name: Log in to Docker registry
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} \
            | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t plantuml:latest .

      - name: Run test
        run: |
          docker run --rm -v $(pwd)/test:/data plantuml sequence.puml
          compare test/sequence.png test/expected-sequence.png -compose src test/sequence-diff.png

      - name: Build version info
        run: |
          docker run --rm -v $(pwd)/test:/data plantuml version.puml

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.plantuml_version.outputs.info }}
          release_name: ${{ steps.plantuml_version.outputs.info }}
          body: |
            https://github.com/plantuml/plantuml/releases/tag/v${{ steps.plantuml_version.outputs.info }}
          draft: false
          prerelease: false

      - name: Upload generated files
        uses: actions/upload-artifact@v2
        with:
          name: generated-files
          path: test/*.png

      - name: Tag Docker image
        run: |
          docker tag plantuml:latest dstockhammer/plantuml:latest
          docker tag plantuml:latest dstockhammer/plantuml:${GITHUB_REF##*/}

      - name: Push Docker images
        run: |
          docker push dstockhammer/plantuml:${GITHUB_REF##*/}
          docker push dstockhammer/plantuml:latest

      - name: Upload version info as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: test/version.png
          asset_name: version.png
          asset_content_type: image/png
