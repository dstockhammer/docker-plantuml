name: Build and publish Docker image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker registry
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get PlantUML version
        run: |
          mvn help:evaluate -q \
              -Dexpression=project.dependencies[0].version \
              -DforceStdout \
            | xargs printf "version=%s" \
            | tee -a $GITHUB_ENV

      - name: Check if the PlantUML version tag already exists
        uses: mukunku/tag-exists-action@v1.5.0
        id: check_version_tag
        with:
          tag: ${{ env.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: plantuml:latest

      - name: Run test
        run: |
          docker run --rm -v $(pwd)/test:/data plantuml sequence.puml
          compare -metric AE test/sequence.png test/expected-sequence.png -compose src test/sequence-diff.png

      - name: Build version info
        run: |
          docker run --rm -v $(pwd)/test:/data plantuml version.puml

      - name: Build release body
        run: |
          echo "https://github.com/plantuml/plantuml/releases/tag/v${{ env.version }}" > release_body.md
          echo '' >> release_body.md
          echo '```' >> release_body.md
          docker run --rm plantuml -version >> release_body.md
          echo '```' >> release_body.md

      - name: Create release
        uses: actions/create-release@v1
        if: ${{ github.ref == 'refs/heads/master' && steps.check_version_tag.outputs.exists == 'false' }}
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          body_path: release_body.md
          draft: false
          prerelease: false

      - name: Upload generated files
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: generated-files
          path: test/*.png

      - name: Upload version info as release asset
        uses: actions/upload-release-asset@v1
        if: ${{ github.ref == 'refs/heads/master' && steps.check_version_tag.outputs.exists == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: test/version.png
          asset_name: version.png
          asset_content_type: image/png

      - name: Cross-build and push to Docker Hub
        uses: docker/build-push-action@v5
        if: ${{ github.ref == 'refs/heads/master' && steps.check_version_tag.outputs.exists == 'false' }}
        with:
          context: .
          push: true
          tags: |
            ${{ github.repository_owner }}/plantuml:latest
            ${{ github.repository_owner }}/plantuml:${{ env.version }}
          labels: |
            org.opencontainers.image.version=${{ env.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ github.ref }}
          platforms: linux/amd64,linux/arm64
